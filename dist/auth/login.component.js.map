{"version":3,"sources":["../../src/auth/login.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAU,MAAO,eAAA,CAAgB;AAC1C,OAAO,EAAE,iBAAA,EAAkB,MAAO,gBAAA,CAAiB;AAEnD;IACE,kCAAmB,OAA0B;QAA1B,YAAO,GAAP,OAAO,CAAmB;IAAG,CAAC;IAC5C,mCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,sFAAsF;iBACjG,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,uCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,iBAAiB,GAAG;KAC1B,EAF6F,CAE7F,CAAC;IACF,+BAAC;CAXD,AAWC,IAAA;SAXY,wBAAwB","file":"login.component.js","sourceRoot":"","sourcesContent":["import { Component } from '@angular/core';\nimport { FormioAuthService } from './auth.service';\n\nexport class FormioAuthLoginComponent {\n  constructor(public service: FormioAuthService) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  template: '<formio [src]=\"service.loginForm\" (submit)=\"service.onLoginSubmit($event)\"></formio>'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FormioAuthService, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}