{"version":3,"sources":["../../src/auth/auth.service.ts"],"names":[],"mappings":"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","file":"auth.service.js","sourceRoot":"","sourcesContent":["import { EventEmitter, Injectable }  from '@angular/core';\nimport { FormioAuthConfig } from './auth.config';\nimport { FormioAppConfig } from '../index';\n\n/* tslint:disable */\nlet Formio = require('formiojs');\nlet _each = require('lodash/each');\n/* tslint:enable */\n\n\nexport class FormioAuthService {\n  public user: any;\n  public authenticated: boolean = false;\n\n  public loginForm: string;\n  public onLogin: EventEmitter<object>;\n  public onLogout: EventEmitter<object>;\n\n  public registerForm: string;\n  public onRegister: EventEmitter<object>;\n  public onUser: EventEmitter<object>;\n  public onError: EventEmitter<any>;\n\n  public ready: Promise<boolean>;\n  public readyResolve: any;\n  public readyReject: any;\n\n  public projectReady: Promise<any>;\n  public accessReady: Promise<any>;\n  public userReady: Promise<any>;\n  public formAccess: any = {};\n  public submissionAccess: any = {};\n  public roles: any;\n  public is: any = {};\n\n  constructor(\n    public appConfig: FormioAppConfig,\n    public config: FormioAuthConfig\n  ) {\n    this.user = null;\n\n    if (!this.config || !this.config.login || !this.config.register) {\n      console.error('You must provide a FormioAuthConfig.');\n      return;\n    }\n\n    if (this.appConfig && this.appConfig.appUrl) {\n      Formio.setBaseUrl(this.appConfig.apiUrl);\n      Formio.setAppUrl(this.appConfig.appUrl);\n      Formio.formOnly = !!this.appConfig.formOnly;\n    }\n    else {\n      console.error('You must provide an AppConfig within your application!');\n    }\n\n    this.loginForm = this.appConfig.appUrl + '/' + this.config.login.form;\n    this.registerForm = this.appConfig.appUrl + '/' + this.config.register.form;\n    this.onLogin = new EventEmitter();\n    this.onLogout = new EventEmitter();\n    this.onRegister = new EventEmitter();\n    this.onUser = new EventEmitter();\n    this.onError = new EventEmitter();\n\n    this.ready = new Promise((resolve: any, reject: any) => {\n      this.readyResolve = resolve;\n      this.readyReject = reject;\n    });\n\n    // Register for the core events.\n    Formio.events.on('formio.badToken', () => this.logoutError());\n    Formio.events.on('formio.sessionExpired', () => this.logoutError());\n    this.init();\n  }\n\n  onLoginSubmit(submission: object) {\n    this.setUser(submission);\n    this.onLogin.emit(submission);\n  }\n\n  onRegisterSubmit(submission: object) {\n    this.setUser(submission);\n    this.onRegister.emit(submission);\n  }\n\n  init() {\n    this.projectReady = Formio.makeStaticRequest(this.appConfig.appUrl).then((project: any) => {\n      _each(project.access, (access: any) => {\n        this.formAccess[access.type] = access.roles;\n      });\n    }, (): any => {\n      this.formAccess = {};\n      return null;\n    });\n\n\n    // Get the access for this project.\n    this.accessReady = Formio.makeStaticRequest(this.appConfig.appUrl + '/access').then((access: any) => {\n      _each(access.forms, (form: any) => {\n        this.submissionAccess[form.name] = {};\n        form.submissionAccess.forEach((subAccess: any) => {\n          this.submissionAccess[form.name][subAccess.type] = subAccess.roles;\n        });\n      });\n      this.roles = access.roles;\n      return access;\n    }, (): any => {\n      this.roles = {};\n      return null;\n    });\n\n    this.userReady = Formio.currentUser().then((user: any) => {\n      this.setUser(user);\n      return user;\n    });\n\n    // Trigger we are redy when all promises have resolved.\n    this.accessReady\n      .then(() => this.projectReady)\n      .then(() => this.userReady)\n      .then(() => this.readyResolve(true))\n      .catch((err: any) => this.readyReject(err));\n  }\n\n  setUser(user: any) {\n    if (user) {\n      this.user = user;\n      localStorage.setItem('formioAppUser', JSON.stringify(user));\n      this.setUserRoles();\n    }\n    else {\n      this.user = null;\n      this.is = {};\n      localStorage.removeItem('formioAppUser');\n      Formio.clearCache();\n      Formio.setUser(null);\n    }\n\n    this.authenticated = !!Formio.getToken();\n    this.onUser.emit(this.user);\n  }\n\n  setUserRoles() {\n    this.accessReady.then(() => {\n      _each(this.roles, (role: any, roleName: string) => {\n        if (this.user.roles.indexOf(role._id) !== -1) {\n          this.is[roleName] = true;\n        }\n      });\n    });\n  }\n\n  logoutError() {\n    this.setUser(null);\n    localStorage.removeItem('formioToken');\n    this.onError.emit();\n  }\n\n  logout() {\n    this.setUser(null);\n    localStorage.removeItem('formioToken');\n    Formio.logout().then(() => this.onLogout.emit()).catch(() => this.logoutError());\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FormioAppConfig, },\n{type: FormioAuthConfig, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}