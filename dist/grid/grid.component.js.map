{"version":3,"sources":["../../src/grid/grid.component.ts"],"names":[],"mappings":"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","file":"grid.component.js","sourceRoot":"","sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { FormioLoader } from '../formio.loader';\nimport { FormioAlerts } from '../formio.alerts';\n\n/* tslint:disable */\nlet Formio = require('formiojs');\nlet FormioUtils = require('formiojs/utils');\nlet Components = require('formiojs/build/components');\nlet _get = require('lodash/get');\nlet _each = require('lodash/each');\nlet _assign = require('lodash/assign');\n/* tslint:enable */\n\n\nexport class FormioGridComponent implements OnInit, OnChanges {\n   src: string;\n   onForm: Promise<any>;\n   query: any;\n   refresh: EventEmitter<object>;\n   select: EventEmitter<object>;\n   error: EventEmitter<any>;\n\n  public columns: any[] = [];\n  public rows: any[] = [];\n  public formio: any;\n  public form: any;\n  public total: number = 0;\n  public page: number = 0;\n  public firstItem: number = 0;\n  public lastItem: number = 0;\n  public skip: number = 0;\n  public isLoading: boolean = false;\n  public initialized: boolean = false;\n\n  constructor(public loader: FormioLoader, public alerts: FormioAlerts) {\n    this.select = new EventEmitter();\n    this.error = new EventEmitter();\n    this.loader.loading = true;\n  }\n\n  loadGrid(src?: string) {\n    // If no source is provided, then skip.\n    if (!src) {\n      return;\n    }\n    // Do not double load.\n    if (this.formio && (src === this.src)) {\n      return;\n    }\n\n    this.formio = new Formio(this.src, {formOnly: true});\n    this.formio.loadForm().then((form: any) => {\n      this.form = form;\n      this.setupColumns();\n    });\n    this.setPage(0);\n  }\n\n  ngOnInit() {\n    this.alerts.setAlerts([]);\n    this.query = this.query || {};\n\n    if (this.refresh) {\n      this.refresh.subscribe((query: object) => this.refreshGrid(query));\n    }\n\n    // Load the grid.\n    this.loadGrid(this.src);\n    this.initialized = true;\n  }\n\n  ngOnChanges(changes: any) {\n    if (this.initialized && changes.src && changes.src.currentValue) {\n      this.loadGrid(changes.src.currentValue);\n    }\n  }\n\n  setupColumns() {\n    FormioUtils.eachComponent(this.form.components, (component:any) => {\n      if (component.input && component.tableView) {\n        this.columns.push({\n          label: component.label,\n          key: 'data.' + component.key,\n          sort: '',\n          component: Components.create(component, null, null, true)\n        });\n      }\n    });\n  }\n\n  set loading(_loading: boolean) {\n    this.loader.loading = this.isLoading = _loading;\n  }\n\n  onError(error: any) {\n    this.error.emit(error);\n    this.alerts.setAlert({\n      type: 'danger',\n      message: error\n    });\n  }\n\n  refreshGrid(query?: any) {\n    query = query || {};\n    query = _assign(query, this.query);\n    if (!query.hasOwnProperty('limit')) {\n      query.limit = 10;\n    }\n    if (!query.hasOwnProperty('skip')) {\n      query.skip = 0;\n    }\n    this.loading = true;\n    this.formio.loadSubmissions({params: query}).then((submissions:any) => {\n      this.firstItem = this.query.skip + 1;\n      this.lastItem = this.firstItem + submissions.length - 1;\n      this.total = submissions.serverCount;\n      this.skip = Math.floor(submissions.skip / query.limit) + 1;\n      this.rows = [];\n      _each(submissions, (submission:any) => {\n        this.rows.push(submission);\n      });\n      this.loading = false;\n    }, (err: any) => this.onError(err)).catch((err: any) => this.onError(err));\n  }\n\n  setPage(num: number = -1) {\n    if (this.isLoading) {\n      return;\n    }\n    this.page = (num !== -1) ? num : this.page;\n    if (!this.query.hasOwnProperty('limit')) {\n      this.query.limit = 10;\n    }\n    if (!this.query.hasOwnProperty('skip')) {\n      this.query.skip = 0;\n    }\n    this.query.skip = this.page * this.query.limit;\n    this.refreshGrid();\n  }\n\n  sortColumn(column:any) {\n    // Reset all other column sorts.\n    _each(this.columns, (col:any) => {\n      if (col.key !== column.key) {\n        col.sort = '';\n      }\n    });\n    switch (column.sort) {\n      case 'asc':\n        column.sort = 'desc';\n        this.query.sort = '-' + column.key;\n        break;\n      case 'desc':\n        column.sort = '';\n        delete this.query.sort;\n        break;\n      case '':\n        column.sort = 'asc';\n        this.query.sort = column.key;\n        break;\n    }\n    this.refreshGrid();\n  }\n\n  pageChanged(page:any) {\n    this.setPage(page.page - 1);\n  }\n\n  onClick(row:any) {\n    this.select.emit(row);\n  }\n\n  data(row:any, col:any) {\n    const cellValue: any = _get(row, col.key);\n    return col.component.asString(cellValue);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'formio-grid',\n  styles: [\n    ':host .formio-grid { position: relative; width: 100%; }',\n    ':host >>> ul.pagination { margin: 5px 0; }',\n    '.item-counter { margin: 5px 0; }',\n    '.page-num { font-size: 1.4em; }',\n    '.grid-refresh { height: 400px; width: 100%; }'\n  ],\n  template:\n    '<div class=\"formio-grid\">' +\n    '  <formio-alerts></formio-alerts>' +\n    '  <table class=\"table table-condensed table-bordered table-striped table-hover\">' +\n    '    <thead>' +\n    '      <tr>' +\n    '        <th *ngFor=\"let col of columns\"><a (click)=\"sortColumn(col)\">{{ col.label }} <span [ngClass]=\"{\\'glyphicon-triangle-top\\': (col.sort === \\'asc\\'), \\'glyphicon-triangle-bottom\\': (col.sort === \\'desc\\')}\" class=\"glyphicon\" *ngIf=\"col.sort\"></span></a></th>' +\n    '      </tr>' +\n    '    </thead>' +\n    '    <formio-loader></formio-loader>' +\n    '    <tbody *ngIf=\"!isLoading\">' +\n    '      <tr *ngFor=\"let row of rows\" (click)=\"onClick(row)\">' +\n    '        <td *ngFor=\"let col of columns\" [innerHTML]=\"data(row, col)\"></td>' +\n    '      </tr>' +\n    '    </tbody>' +\n    '    <tfoot>' +\n    '      <tr>' +\n    '        <td [colSpan]=\"columns.length\">' +\n    '          <pagination [totalItems]=\"total\" [(ngModel)]=\"skip\" (pageChanged)=\"pageChanged($event)\" class=\"pagination-sm\"></pagination>' +\n    '          <span class=\"pull-right item-counter\"><span class=\"page-num\">{{ firstItem }} - {{ lastItem }}</span> / {{ total }} total</span>' +\n    '        </td>' +\n    '      </tr>' +\n    '    </tfoot>' +\n    '  </table>' +\n    '</div>'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FormioLoader, },\n{type: FormioAlerts, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'src': [{ type: Input },],\n'onForm': [{ type: Input },],\n'query': [{ type: Input },],\n'refresh': [{ type: Input },],\n'select': [{ type: Output },],\n'error': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}