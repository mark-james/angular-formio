{"version":3,"sources":["../../src/resource/create.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,YAAA,EAAa,MAAO,eAAA,CAAgB;AACxD,OAAO,EAAE,MAAA,EAAQ,cAAA,EAAe,MAAO,iBAAA,CAAkB;AACzD,OAAO,EAAE,qBAAA,EAAsB,MAAO,oBAAA,CAAqB;AAC3D,OAAO,EAAE,oBAAA,EAAqB,MAAO,mBAAA,CAAoB;AAGzD;IAGI,uCACW,OAA8B,EAC9B,KAAqB,EACrB,MAAc,EACd,MAA4B;QAH5B,YAAO,GAAP,OAAO,CAAuB;QAC9B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAsB;QAEnC,yBAAyB;QACzB,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,EAAE,CAAC;IACxC,CAAC;IAED,gDAAQ,GAAR,UAAS,UAAe;QAAxB,iBAIC;QAHG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;YAC/B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,EAAC,UAAU,EAAE,KAAI,CAAC,KAAK,EAAC,CAAC,CAAC;QAC/F,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAQ,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAtB,CAAsB,CAAC,CAAC;IACnD,CAAC;IACE,wCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACtB,MAAM,EAAE,CAAC,oCAAoC,CAAC;oBAC9C,QAAQ,EACJ,uLAAuL;wBACvL,2MAA2M;iBAClN,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,4CAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,qBAAqB,GAAG;QAC/B,EAAC,IAAI,EAAE,cAAc,GAAG;QACxB,EAAC,IAAI,EAAE,MAAM,GAAG;QAChB,EAAC,IAAI,EAAE,oBAAoB,GAAG;KAC7B,EAL6F,CAK7F,CAAC;IACF,oCAAC;CAnCD,AAmCC,IAAA;SAnCY,6BAA6B","file":"create.component.js","sourceRoot":"","sourcesContent":["import { Component, EventEmitter } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormioResourceService } from './resource.service';\nimport { FormioResourceConfig } from './resource.config';\n\n\nexport class FormioResourceCreateComponent {\n    public onError: EventEmitter<any>;\n    public onSuccess: EventEmitter<any>;\n    constructor(\n        public service: FormioResourceService,\n        public route: ActivatedRoute,\n        public router: Router,\n        public config: FormioResourceConfig\n    ) {\n        // Start with fresh data.\n        this.service.initialize();\n        this.onError = new EventEmitter();\n        this.onSuccess = new EventEmitter();\n    }\n\n    onSubmit(submission: any) {\n        this.service.save(submission).then(() => {\n            this.router.navigate(['../', this.service.resource._id, 'view'], {relativeTo: this.route});\n        }).catch((err: any) => this.onError.emit(err));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    styles: ['.back-button { font-size: 0.8em; }'],\n    template:\n        '<h3 *ngIf=\"service.form\" style=\"margin-top:0;\"><a routerLink=\"../\" class=\"back-button\"><span class=\"glyphicon glyphicon-chevron-left\"></span></a> | New {{ service.form.title }}</h3>' +\n        '<formio [form]=\"service.form\" [submission]=\"service.resource\" [refresh]=\"service.refresh\" [hideComponents]=\"config.parents\" [error]=\"onError\" [success]=\"onSuccess\" (submit)=\"onSubmit($event)\"></formio>'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FormioResourceService, },\n{type: ActivatedRoute, },\n{type: Router, },\n{type: FormioResourceConfig, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}