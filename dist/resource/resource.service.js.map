{"version":3,"sources":["../../src/resource/resource.service.ts"],"names":[],"mappings":"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","file":"resource.service.js","sourceRoot":"","sourcesContent":["import { EventEmitter, Injectable, Optional }  from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormioResourceConfig } from './resource.config';\nimport { FormioResources, FormioResourceMap } from './resources.service';\nimport { FormioLoader, FormioAppConfig } from '../index';\nimport { FormioRefreshValue } from '../formio.common';\n\n/* tslint:disable */\nlet Promise = require('native-promise-only');\nlet Formio = require('formiojs');\nlet FormioUtils = require('formiojs/utils');\n/* tslint:enable */\n\n\nexport class FormioResourceService {\n    public form: any;\n    public resource: any;\n    public resourceUrl: string;\n    public formUrl: string;\n    public formFormio: any;\n    public formio: any;\n\n    public onParents: EventEmitter<object[]>;\n    public onIndexSelect: EventEmitter<object>;\n    public refresh: EventEmitter<FormioRefreshValue>;\n\n    public resourceLoading: Promise<any>;\n    public resourceLoaded: Promise<any>;\n    public resourceResolve: any;\n    public resourceReject: any;\n    public resourceId: string;\n\n    public formLoading: Promise<any>;\n    public formLoaded: Promise<any>;\n    public formResolve: any;\n    public formReject: any;\n    public resources: FormioResourceMap;\n\n    constructor(\n        public appConfig: FormioAppConfig,\n        public config: FormioResourceConfig,\n        public loader: FormioLoader,\n         public resourcesService: FormioResources\n    ) {\n        if (this.appConfig && this.appConfig.appUrl) {\n            Formio.setBaseUrl(this.appConfig.apiUrl);\n            Formio.setAppUrl(this.appConfig.appUrl);\n            Formio.formOnly = this.appConfig.formOnly;\n        }\n        else {\n            console.error('You must provide an AppConfig within your application!');\n        }\n\n        // Create the form url and load the resources.\n        this.formUrl = this.appConfig.appUrl + '/' + this.config.form;\n        this.initialize();\n    }\n\n    initialize() {\n        this.onParents = new EventEmitter();\n        this.onIndexSelect = new EventEmitter();\n        this.refresh = new EventEmitter();\n        this.resource = {data: {}};\n        this.resourceLoaded = new Promise((resolve: any, reject: any) => {\n            this.resourceResolve = resolve;\n            this.resourceReject = reject;\n        });\n        this.formLoaded = new Promise((resolve: any, reject: any) => {\n            this.formResolve = resolve;\n            this.formReject = reject;\n        });\n\n        // Add this resource service to the list of all resources in context.\n        if (this.resourcesService) {\n            this.resourcesService.resources[this.config.name] = this;\n            this.resources = this.resourcesService.resources;\n        }\n\n        this.loadForm();\n        this.setParents();\n    }\n\n    onError(error: any) {\n        if (this.resourcesService) {\n            this.resourcesService.error.emit(error);\n        }\n        throw error;\n    }\n\n    onFormError(err: any) {\n        this.formReject(err);\n        this.onError(err);\n    }\n\n    loadForm() {\n        if (this.formLoading) {\n            return this.formLoading;\n        }\n        this.formFormio = (new Formio(this.formUrl));\n        this.loader.loading = true;\n        this.formLoading = this.formFormio.loadForm().then((form: any) => {\n            this.form = form;\n            this.formResolve(form);\n            this.loader.loading = false;\n            return form;\n        }, (err: any) => this.onFormError(err)).catch((err: any) => this.onFormError(err));\n        return this.formLoading;\n    }\n\n    setParents() {\n        if (!this.config.parents || !this.config.parents.length) {\n            return;\n        }\n\n        if (!this.resourcesService) {\n            console.warn('You must provide the FormioResources within your application to use nested resources.');\n            return;\n        }\n\n        // Iterate through the list of parents.\n        const parentsLoaded: Array<Promise<any>> = [];\n        this.config.parents.forEach((parent: string) => {\n            // See if this parent is already in context.\n            if (this.resources.hasOwnProperty(parent)) {\n                parentsLoaded.push(this.resources[parent].resourceLoaded.then((resource: any) => {\n                    // Make sure we hide the component that is the parent.\n                    this.formLoaded.then((form) => {\n                        const component = FormioUtils.getComponent(form.components, parent);\n                        if (component) {\n                            component.hidden = true;\n                            this.refresh.emit({\n                                property: 'form',\n                                value: form\n                            });\n                        }\n                    });\n\n                    if (!this.resourceLoading) {\n                        // Set the value of this parent in the submission data.\n                        this.resource.data[parent] = resource;\n                        this.refresh.emit({\n                            property: 'submission',\n                            value: this.resource\n                        });\n\n                        return {\n                            'name': parent,\n                            'resource': resource\n                        };\n                    }\n                    return null;\n                }));\n            }\n        });\n\n        // When all the parents have loaded, emit that to the onParents emitter.\n        Promise.all(parentsLoaded).then((parents: any) => this.onParents.emit(parents));\n    }\n\n    onSubmissionError(err: any) {\n        this.resourceReject(err);\n        this.onError(err);\n    }\n\n    loadResource(route: ActivatedRoute) {\n        // Reuse the same loading promise if the params are the same.\n        if (\n          this.resourceLoading &&\n          (route.snapshot.params['id'] === this.resourceId)\n        ) {\n            return this.resourceLoading;\n        }\n        this.resourceId = route.snapshot.params['id'];\n        this.resource = {data: {}};\n        this.resourceUrl = this.appConfig.appUrl + '/' + this.config.form;\n        this.resourceUrl += '/submission/' + this.resourceId;\n        this.formio = (new Formio(this.resourceUrl));\n        this.loader.loading = true;\n        this.resourceLoading = this.formio.loadSubmission().then((resource: any) => {\n            this.resource = resource;\n            this.resourceResolve(resource);\n            this.loader.loading = false;\n            return resource;\n        }, (err: any) => this.onSubmissionError(err)).catch((err: any) => this.onSubmissionError(err));\n        return this.resourceLoading;\n    }\n\n    save(resource:any) {\n        const formio = resource._id ? this.formio : this.formFormio;\n        return formio.saveSubmission(resource).then((saved: any) => {\n            this.resource = saved;\n            return saved;\n        }, (err: any) => this.onError(err)).catch((err: any) => this.onError(err));\n    }\n\n    remove() {\n        return this.formio.deleteSubmission().then(() => {\n           this.resource = null;\n        }, (err: any) => this.onError(err)).catch((err: any) => this.onError(err));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FormioAppConfig, },\n{type: FormioResourceConfig, },\n{type: FormioLoader, },\n{type: FormioResources, decorators: [{ type: Optional }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}